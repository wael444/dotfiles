#!/usr/bin/env -S yash

newline="
"
esc=""

## helpers
notify() {
	dunstify -r 64219 "$@"
}

printnotif() {
	width="$1"
	shift
	while [ $# -gt 0 ]; do
		printf "%-${width}s - %s\n" "$1" "$2"
		shift 2
	done
}


# shellcheck disable=SC2299
# shellcheck disable=SC3060
query_time() {
	echo "Ôó¨ $(date '+%a %d') Ôôè $(date '+%H:%M:%S')"
	[ -n "$BLOCK_BUTTON" ] && {
		cal="$(cal --color=always)" # force colorization
		# remove all after the header, it will be replaced anyway
		cal="${cal##*"${cal%%"$newline"*}""$newline"}"
		# since --color=always is called, current day is highlighted with reversed colors
		# remove all after ESC[7m and then all before ESC[27M
		curday="${${cal##*"$esc"[7m}%%"$esc"[27m*}"
		cal="${cal//$curday/<b><u>$curday</u></b>}" # highlight current day with pango markup
		cal="${${cal/"$esc"[7m/}/"$esc"[27m/}" # strip ansi escape codes
		notify "    $(date '+%Y %m %B')" "$cal"
	}
}

query_cpu() {
	read -r temp < /sys/class/thermal/thermal_zone2/temp
	read -r loadavg < /proc/loadavg
	loadavg="${loadavg%%\ *}"
	temp="${temp%000}¬∞C"
	echo "Ô¢í $loadavg Ô®é $temp"

	case $BLOCK_BUTTON in
		1) notify "cpu usage" "$(ps -ewo %cpu,cmd --sort=-%cpu --no-headers | head -20 | cut -c-50 )" ;;
		3)
			read -r gov < /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
			read -r freq < /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
			read -r cstate < /sys/module/intel_idle/parameters/max_cstate
			notify "processor information" "$(
				printnotif 12 "Load Average" "$loadavg" \
							  "Governor" "$gov" \
							  "Frequency" "$((freq / 1000))MHz" \
							  "C-State" "${cstate}C" \
							  "Temperature" "$temp"
			)"
		;;
	esac
}

query_gpu() {
	# graphics=XX memory=XX video=XX PCIe=XX
	eval "$(nvidia-settings -q GPUUtilization -t | tr -d ,)"

	# shellcheck disable=SC2154
	echo "Ô°∏ ${graphics}% Ô®é $(nvidia-settings -q GPUCoreTemp -t)¬∞C "

	case $BLOCK_BUTTON in
		1)
			notify "graphics card usage" "$(
				for usage in video PCIe memory graphics; do
					printnotif 8 "$usage" "$(eval echo "\$$usage")"%
				done
			)"
		;;
		3)
			set -o brace-expand
			notify "querying information..."
			notify "graphics card information" "$(
				# ok this is pretty shitty but it works i guess
				for get in NvidiaDriverVersion GPU{CoreTemp,CurrentFanSpeed,ResizableBar} RefreshRate3; do
					query="$(nvidia-settings -q $get -t | tr '\n' ' ')"
					printnotif 19 "$get" "$query"
				done
			)"
		;;
	esac
}

#
query_mem() {
	while IFS=':k ' read -r name value _; do 
		case $name in 
			MemAvailable) memavail=$value ;; 
			MemTotal) memtotal=$value ;; 
		esac 
	done < /proc/meminfo
	echo "Ô°ö $(( (memtotal - memavail) * 100 / memtotal ))%"

	case $BLOCK_BUTTON in
		1) notify "memory usage" "$(
				ps -axo rss,%mem,cmd --sort -rss --no-headers | head -20 | cut -c-50 \
				| while read -r rss rest; do 
					echo $((rss/1024))"MB -" "$rest"
				done
			)" 
		;;
		3) 
			memtotal="$((memtotal / 1024))MiB"
			memavail="$((memavail / 1024))MiB"
			notify "$(printnotif 8 "$memtotal" "total" "$memavail" "used")" 
		;;
	esac
}

query_net() {
	interface=/sys/class/net/eno2/
	read -r status < $interface/operstate
	[ "$status" = down ] && printicon 4 "Ôôö"

	update() {
		cache="${XDG_CACHE_HOME:-$HOME/.cache}/${0##*/}_${1##*/}"
		read -r old < "$cache"
		read -r new < "$1"
		printf '%s' "$new" > "$cache"
		numfmt --to=iec "$(( new - old ))"
	}

	echo "Ôïú $(update $interface/statistics/rx_bytes) ÔïÑ $(update $interface/statistics/tx_bytes)"
}

query_disk() {
	read -r ssd1_temp < /sys/devices/pci0000:00/0000:00:1b.4/0000:03:00.0/nvme/nvme0/hwmon0/temp1_input
	read -r ssd1_modl < /sys/devices/pci0000:00/0000:00:1b.4/0000:03:00.0/nvme/nvme0/model
	read -r ssd2_temp < /sys/devices/pci0000:00/0000:00:1d.0/0000:05:00.0/nvme/nvme1/hwmon1/temp1_input
	read -r ssd2_modl < /sys/devices/pci0000:00/0000:00:1d.0/0000:05:00.0/nvme/nvme1/model
	echo "${ssd1_modl%%\ *} ${ssd1_temp%850}¬∞C ${ssd2_modl%%\ *} ${ssd2_temp%850}¬∞C"
}

#
audio() {
	echo "Ô©Ω$(volctl getvol)%"
	case $BLOCK_BUTTON in
		1) pavucontrol ;;
		3) volctl mute ;;
		5) volctl -5%  ;;
		4) volctl +5%  ;;
	esac
}

query_"$1" 
